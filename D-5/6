import java.util.HashSet;
import java.util.Set;

public class UniquePermutations {
    public static void main(String[] args) {
        int givenNumber = 143;

        Set<Integer> permutations = findUniquePermutations(givenNumber);
        System.out.println("Unique permutations of " + givenNumber + ": " + permutations);
    }

    public static Set<Integer> findUniquePermutations(int number) {
        Set<Integer> result = new HashSet<>();
        generatePermutations("", String.valueOf(number), result);
        return result;
    }

    public static void generatePermutations(String prefix, String remaining, Set<Integer> result) {
        if (remaining.length() == 0) {
            result.add(Integer.parseInt(prefix));
            return;
        }
        for (int i = 0; i < remaining.length(); i++) {
            String newPrefix = prefix + remaining.charAt(i);
            String newRemaining = remaining.substring(0, i) + remaining.substring(i + 1);
            generatePermutations(newPrefix, newRemaining, result);
        }
    }
}
