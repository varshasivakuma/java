Write a program using choice to check
Case 1: Given string is palindrome or not
Case 2: Given number is palindrome or not

import java.util.Scanner;

public class PalindromeChecker {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Choose an option:");
        System.out.println("1. Check if a string is a palindrome");
        System.out.println("2. Check if a number is a palindrome");

        int choice = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        switch (choice) {
            case 1:
                System.out.print("Enter a string: ");
                String inputString = scanner.nextLine();
                if (isPalindrome(inputString))
                    System.out.println("The given string is a palindrome.");
                else
                    System.out.println("The given string is not a palindrome.");
                break;
            case 2:
                System.out.print("Enter a number: ");
                int inputNumber = scanner.nextInt();
                if (isPalindrome(inputNumber))
                    System.out.println("The given number is a palindrome.");
                else
                    System.out.println("The given number is not a palindrome.");
                break;
            default:
                System.out.println("Invalid choice.");
        }

        scanner.close();
    }

    // Function to check if a string is a palindrome
    public static boolean isPalindrome(String str) {
        int left = 0;
        int right = str.length() - 1;
        while (left < right) {
            if (str.charAt(left) != str.charAt(right))
                return false;
            left++;
            right--;
        }
        return true;
    }

    // Function to check if a number is a palindrome
    public static boolean isPalindrome(int num) {
        int originalNumber = num;
        int reversedNumber = 0;
        while (num != 0) {
            int digit = num % 10;
            reversedNumber = reversedNumber * 10 + digit;
            num /= 10;
        }
        return originalNumber == reversedNumber;
    }
}
