import java.util.Arrays;
import java.util.Comparator;

public class WeakestRows {
    public static void main(String[] args) {
        int[][] mat1 = {
                {1, 1, 0, 0, 0},
                {1, 1, 1, 1, 0},
                {1, 0, 0, 0, 0},
                {1, 1, 0, 0, 0},
                {1, 1, 1, 1, 1}
        };
        int k1 = 3;
        int[] result1 = kWeakestRows(mat1, k1);
        System.out.println("Output 1: " + Arrays.toString(result1));

        int[][] mat2 = {
                {1, 0, 0, 0},
                {1, 1, 1, 1},
                {1, 0, 0, 0},
                {1, 0, 0, 0}
        };
        int k2 = 2;
        int[] result2 = kWeakestRows(mat2, k2);
        System.out.println("Output 2: " + Arrays.toString(result2));
    }

    public static int[] kWeakestRows(int[][] mat, int k) {
        int m = mat.length;
        int n = mat[0].length;

        int[][] strength = new int[m][2];
        for (int i = 0; i < m; i++) {
            int count = 0;
            for (int j = 0; j < n; j++) {
                if (mat[i][j] == 1) {
                    count++;
                } else {
                    break;
                }
            }
            strength[i][0] = i;
            strength[i][1] = count;
        }

        Arrays.sort(strength, Comparator.comparingInt(a -> a[1]));

        int[] result = new int[k];
        for (int i = 0; i < k; i++) {
            result[i] = strength[i][0];
        }

        return result;
    }
}
