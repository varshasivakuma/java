class Customer {
    private int accountNo;
    private String accName;
    private double balance;

    public Customer(int accountNo, String accName, double balance) {
        this.accountNo = accountNo;
        this.accName = accName;
        this.balance = balance;
    }

    public synchronized void deposit(double amount) {
        System.out.println("Depositing " + amount);
        balance += amount;
        System.out.println("Deposit completed, new balance: " + balance);
        notify(); // Notify the waiting thread (withdraw) that deposit is done
    }

    public synchronized void withdraw(double amount) {
        System.out.println("Withdrawing " + amount);
        while (amount > balance) {
            try {
                System.out.println("Insufficient balance, waiting for deposit...");
                wait(); // Wait for deposit to increase balance
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        balance -= amount;
        System.out.println("Withdrawal completed, new balance: " + balance);
    }
}

public class BankingSystem {
    public static void main(String[] args) {
        Customer customer = new Customer(123456, "John Doe", 10000);

        Thread withdrawThread = new Thread(() -> {
            customer.withdraw(12000);
        });

        Thread depositThread = new Thread(() -> {
            customer.deposit(12000);
        });

        withdrawThread.start();
        depositThread.start();
    }
}
